const ValidateWrapper = artifacts.require("ValidateWrapper");

let {
    assertRejects
} = require('./utilities.js');

contract('Validate', (accounts) => {
    const [operator, depositor] = accounts
    
    const zeroHash32 = "0x0000000000000000000000000000000000000000000000000000000000000000"

    const short_sig = "0x7226EB9E77E58C172BDC510C76E15B4BF9A81EF"
    const long_sig = "0x7226EB9E77E58C172BDC510C76E15B4BF9A81EF38D91D54173DC79D135A80F5167226EB9E77E58C172BDC510C76E15B4BF9A81EF38D91D54173DC79D135A80F5167226EB9E77E58C172BDC510C76E15B4BF9A81EF38D91D54173DC79D135A80F5167226EB9E77E58C172BDC510C76E15B4BF9A81EF38D91D54173DC79D135A80F516"

    zeroSig195 = "0x000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
    zeroSig260 = "0x

    before(async () => {
        validator = await ValidateWrapper.new();
    })

    describe('checkSigs', () => {

        it('Fail: sig length not a multiple of 65', async () => {
            await assertRejects(validator.checkSigs(zeroHash32, zeroHash32, 0, zeroHash32))
        })

        it('Fail: sig length greater than 260', async () => {
            // This looks like a bug!
            // res = await validator.checkSigs.call(zeroHash32, zeroHash32, 0, zeroSig195)
            // res = await validator.checkSigs.call(zeroHash32, zeroHash32, 0, zeroSig195)
            // console.log(res)
            // assert.ok(false)
        })

        // TODO - Get Validator to pass


    })

})
